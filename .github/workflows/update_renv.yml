name: update-renv

# Only run this when the main branch changes
on:
  schedule:
    # l√§uft jede Woche am Montag
    - cron:  '0 9 * * 1'
  workflow_dispatch:

jobs:  
  # next: create website using docker
  update:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/methods-berlin/rlernplattform_dep:latest
    permissions:
      contents: write
    steps:
      # get current project
      - uses: actions/checkout@v3
      - name: specify R package paths
        run: |
          print(getwd())
          current_libs <- .libPaths()
          print("Library locations:")
          print(current_libs)
          file_name <- file("RLernplattform/.Rprofile")
          writeLines(paste0(".libPaths(c(",paste0(paste0('"', current_libs, '"'), collapse = ", "), "))"), file_name)
          close(file_name)          
        shell: Rscript {0} 
        working-directory: ..
      - name: list files
        run: ls
      # Copied from oalders at https://github.com/actions/checkout/issues/1049
      - name: Allow for file ownership conflicts with Docker and GitHub Actions
        run: git config --global --add safe.directory '*'
      - name: Set git credentials
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: check for updates
        run: |
          # check if libs were correctly set
          current_libs <- .libPaths()
          print(current_libs)
          
          # restore
          renv::restore()
          # print renv status
          renv::status()
          # update renv
          #renv::upgrade(prompt = FALSE)
          # update packages
          renv::update(prompt = FALSE)
          # make snapshot
          renv::snapshot(prompt = FALSE)
        shell: Rscript {0}
      - name: add changes
        run: |
          git branch update_renv
          git checkout update_renv
          git add renv.lock
          git add renv/
          # only commit if there are changes
          # adapted from marekventur at https://stackoverflow.com/questions/22040113/how-to-let-jenkins-git-commit-only-if-there-are-changes
          (git commit -am "updating renv and packages" && git push origin update_renv) || echo "No changes to commit"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  create-pull-request:
    runs-on: ubuntu-latest
    needs: update
    permissions:
      contents: write
    steps:
      # get update_renv - branch
      - uses: actions/checkout@v3
        with:
          ref: 'update_renv'
      # check status
      - name: status
        run: git status
      # create pull request into main branch
      - name: create pull request
        run: gh pr create -B main -H update_renv --title 'Updating R packages in renv' --body 'Wait for the tests to finish and merge the branch into main. Delete the update_renv branch afterwards.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
